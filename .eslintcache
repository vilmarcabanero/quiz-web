[{"C:\\Users\\Default.DESKTOP-EC0DGM4\\FullStack\\Quiz-app\\src\\index.js":"1","C:\\Users\\Default.DESKTOP-EC0DGM4\\FullStack\\Quiz-app\\src\\reportWebVitals.js":"2","C:\\Users\\Default.DESKTOP-EC0DGM4\\FullStack\\Quiz-app\\src\\App.jsx":"3","C:\\Users\\Default.DESKTOP-EC0DGM4\\FullStack\\Quiz-app\\src\\components\\QuizCategories.jsx":"4","C:\\Users\\Default.DESKTOP-EC0DGM4\\FullStack\\Quiz-app\\src\\helpers.js":"5","C:\\Users\\Default.DESKTOP-EC0DGM4\\FullStack\\Quiz-app\\src\\components\\QuizAnswers.jsx":"6","C:\\Users\\Default.DESKTOP-EC0DGM4\\FullStack\\Quiz-app\\src\\components\\TotalResults.jsx":"7","C:\\Users\\Default.DESKTOP-EC0DGM4\\FullStack\\Quiz-app\\src\\components\\AnswersReview.jsx":"8","C:\\Users\\Default.DESKTOP-EC0DGM4\\vc\\0\\0-quiz-web\\src\\index.js":"9","C:\\Users\\Default.DESKTOP-EC0DGM4\\vc\\0\\0-quiz-web\\src\\App.js":"10","C:\\Users\\Default.DESKTOP-EC0DGM4\\vc\\0\\0-quiz-web\\src\\helpers.js":"11","C:\\Users\\Default.DESKTOP-EC0DGM4\\vc\\0\\0-quiz-web\\src\\components\\QuizAnswers.js":"12","C:\\Users\\Default.DESKTOP-EC0DGM4\\vc\\0\\0-quiz-web\\src\\components\\TotalResults.js":"13","C:\\Users\\Default.DESKTOP-EC0DGM4\\vc\\0\\0-quiz-web\\src\\components\\AnswersReview.js":"14","C:\\Users\\Default.DESKTOP-EC0DGM4\\vc\\0\\0-quiz-web\\src\\components\\CategoryOne.js":"15","C:\\Users\\Default.DESKTOP-EC0DGM4\\vc\\0\\0-quiz-web\\src\\components\\CE.js":"16","C:\\Users\\Default.DESKTOP-EC0DGM4\\vc\\0\\0-quiz-web\\src\\components\\CategoryThree.js":"17","C:\\Users\\Default.DESKTOP-EC0DGM4\\vc\\0\\0-quiz-web\\src\\components\\CategoryTwo.js":"18"},{"size":461,"mtime":1616971429086,"results":"19","hashOfConfig":"20"},{"size":375,"mtime":1616971429087,"results":"21","hashOfConfig":"20"},{"size":139,"mtime":1616971429083,"results":"22","hashOfConfig":"20"},{"size":6621,"mtime":1616971429085,"results":"23","hashOfConfig":"20"},{"size":1424,"mtime":1616971429086,"results":"24","hashOfConfig":"20"},{"size":4331,"mtime":1616971429084,"results":"25","hashOfConfig":"20"},{"size":1294,"mtime":1616971429085,"results":"26","hashOfConfig":"20"},{"size":2203,"mtime":1616971429084,"results":"27","hashOfConfig":"20"},{"size":174,"mtime":1622335766781,"results":"28","hashOfConfig":"29"},{"size":158,"mtime":1622359878534,"results":"30","hashOfConfig":"29"},{"size":1882,"mtime":1622366873889,"results":"31","hashOfConfig":"29"},{"size":3804,"mtime":1622361680902,"results":"32","hashOfConfig":"29"},{"size":1172,"mtime":1622361683406,"results":"33","hashOfConfig":"29"},{"size":1851,"mtime":1622361677054,"results":"34","hashOfConfig":"29"},{"size":8024,"mtime":1622367410074,"results":"35","hashOfConfig":"29"},{"size":2650,"mtime":1622501239649,"results":"36","hashOfConfig":"29"},{"size":8144,"mtime":1622367687921,"results":"37","hashOfConfig":"29"},{"size":8140,"mtime":1622367647576,"results":"38","hashOfConfig":"29"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"l7bvkf",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"15wnoqy",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"57"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"57"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"57"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"57"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"57"},"C:\\Users\\Default.DESKTOP-EC0DGM4\\FullStack\\Quiz-app\\src\\index.js",[],"C:\\Users\\Default.DESKTOP-EC0DGM4\\FullStack\\Quiz-app\\src\\reportWebVitals.js",[],"C:\\Users\\Default.DESKTOP-EC0DGM4\\FullStack\\Quiz-app\\src\\App.jsx",[],"C:\\Users\\Default.DESKTOP-EC0DGM4\\FullStack\\Quiz-app\\src\\components\\QuizCategories.jsx",[],"C:\\Users\\Default.DESKTOP-EC0DGM4\\FullStack\\Quiz-app\\src\\helpers.js",[],"C:\\Users\\Default.DESKTOP-EC0DGM4\\FullStack\\Quiz-app\\src\\components\\QuizAnswers.jsx",[],"C:\\Users\\Default.DESKTOP-EC0DGM4\\FullStack\\Quiz-app\\src\\components\\TotalResults.jsx",[],"C:\\Users\\Default.DESKTOP-EC0DGM4\\FullStack\\Quiz-app\\src\\components\\AnswersReview.jsx",[],"C:\\Users\\Default.DESKTOP-EC0DGM4\\vc\\0\\0-quiz-web\\src\\index.js",[],["81","82"],"C:\\Users\\Default.DESKTOP-EC0DGM4\\vc\\0\\0-quiz-web\\src\\App.js",[],"C:\\Users\\Default.DESKTOP-EC0DGM4\\vc\\0\\0-quiz-web\\src\\helpers.js",[],"C:\\Users\\Default.DESKTOP-EC0DGM4\\vc\\0\\0-quiz-web\\src\\components\\QuizAnswers.js",["83"],"import {\r\n\tGrid,\r\n\tPaper,\r\n\tSelect,\r\n\tButton,\r\n\tMenuItem,\r\n\tTypography,\r\n\tInputLabel,\r\n\tFormControl,\r\n} from '@material-ui/core';\r\nimport { useState, useEffect } from 'react';\r\nimport { createMarkup } from '../helpers';\r\nimport TotalResults from './TotalResults';\r\n\r\nconst QuizAnswers = ({\r\n\tclasses,\r\n\tquizData,\r\n\tresetQuiz,\r\n\tcurrentQuizStep,\r\n\tsetCurrentQuizStep,\r\n}) => {\r\n\tconst [selectedAnswers, setSelectedAnswers] = useState([]);\r\n\tconst [processedAnswers, setProcessedAnswers] = useState([]);\r\n\r\n\tconst handleResult = e => {\r\n\t\te.preventDefault();\r\n\r\n\t\tconst processedAnswers = selectedAnswers.map(({ answer, question }) => {\r\n\t\t\tconst relatedQuestion = quizData.find(\r\n\t\t\t\tcategory => category.question === question\r\n\t\t\t);\r\n\t\t\tif (relatedQuestion.correct_answer === answer) {\r\n\t\t\t\treturn { correctAnswer: answer, isCorrect: true, question };\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\tcorrectAnswer: relatedQuestion.correct_answer,\r\n\t\t\t\twrongAnswer: answer,\r\n\t\t\t\tisCorrect: false,\r\n\t\t\t\tquestion,\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\tsetProcessedAnswers(processedAnswers);\r\n\t};\r\n\r\n\tconst handleAnswerChange = (e, selectedQuestion) => {\r\n\t\te.preventDefault();\r\n\t\tconst { value } = e.target;\r\n\r\n\t\tconst isExistQuestion =\r\n\t\t\tselectedAnswers.length &&\r\n\t\t\tselectedAnswers.find(answer => answer.question === selectedQuestion);\r\n\r\n\t\tif (isExistQuestion && isExistQuestion.answer) {\r\n\t\t\tconst updatedAnswers = selectedAnswers.map(answer => {\r\n\t\t\t\tif (answer.question === selectedQuestion) {\r\n\t\t\t\t\treturn { question: selectedQuestion, answer: value };\r\n\t\t\t\t}\r\n\t\t\t\treturn answer;\r\n\t\t\t});\r\n\t\t\tsetSelectedAnswers(updatedAnswers);\r\n\t\t} else {\r\n\t\t\tsetSelectedAnswers([\r\n\t\t\t\t...selectedAnswers,\r\n\t\t\t\t{ question: selectedQuestion, answer: value },\r\n\t\t\t]);\r\n\t\t}\r\n\t};\r\n\r\n\tconst relatedAnswer = (question, selectedAnswers) => {\r\n\t\tif (selectedAnswers && selectedAnswers.length) {\r\n\t\t\tconst relatedQuestion = selectedAnswers.find(\r\n\t\t\t\tanswer => answer.question === question\r\n\t\t\t);\r\n\t\t\treturn (relatedQuestion && relatedQuestion.answer) || '';\r\n\t\t}\r\n\t\treturn '';\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\twindow.scrollTo(0, '20px');\r\n\t}, []);\r\n\r\n\treturn !processedAnswers || !processedAnswers.length ? (\r\n\t\t<>\r\n\t\t\t<Typography variant='h1' className={classes.mainTitle}>\r\n\t\t\t\tAnswer following questions:\r\n\t\t\t</Typography>\r\n\t\t\t<form onSubmit={handleResult}>\r\n\t\t\t\t<Grid container spacing={4}>\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t{quizData.map(quiz => (\r\n\t\t\t\t\t\t\t<div key={quiz.questionId} className={classes.paper}>\r\n\t\t\t\t\t\t\t\t<Typography variant='h5' className={classes.question}>\r\n\t\t\t\t\t\t\t\t\t<span dangerouslySetInnerHTML={createMarkup(quiz.question)} />\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<FormControl fullWidth variant='outlined'>\r\n\t\t\t\t\t\t\t\t\t<InputLabel id='answer-select-label'>\r\n\t\t\t\t\t\t\t\t\t\tSelect answer:\r\n\t\t\t\t\t\t\t\t\t</InputLabel>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\tname='answer'\r\n\t\t\t\t\t\t\t\t\t\tid='answer-select'\r\n\t\t\t\t\t\t\t\t\t\tlabel='Select answer'\r\n\t\t\t\t\t\t\t\t\t\tvalue={relatedAnswer(quiz.question, selectedAnswers) || ''}\r\n\t\t\t\t\t\t\t\t\t\tlabelId='answer-select-label'\r\n\t\t\t\t\t\t\t\t\t\tonChange={e => handleAnswerChange(e, quiz.question)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{quiz.answers.map(answer => (\r\n\t\t\t\t\t\t\t\t\t\t\t<MenuItem key={answer} value={answer}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span dangerouslySetInnerHTML={createMarkup(answer)} />\r\n\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tclassName={classes.submitButton}\r\n\t\t\t\t\t\t\tvariant='contained'\r\n\t\t\t\t\t\t\tcolor='primary'\r\n\t\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tResult\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</form>\r\n\t\t</>\r\n\t) : (\r\n\t\t<TotalResults\r\n\t\t\tclasses={classes}\r\n\t\t\tresetQuiz={resetQuiz}\r\n\t\t\tcurrentQuizStep={currentQuizStep}\r\n\t\t\tprocessedAnswers={processedAnswers}\r\n\t\t\tsetCurrentQuizStep={setCurrentQuizStep}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default QuizAnswers;\r\n","C:\\Users\\Default.DESKTOP-EC0DGM4\\vc\\0\\0-quiz-web\\src\\components\\TotalResults.js",[],"C:\\Users\\Default.DESKTOP-EC0DGM4\\vc\\0\\0-quiz-web\\src\\components\\AnswersReview.js",["84"],"import { Paper, Button, Typography } from '@material-ui/core';\r\nimport { Check, Close } from '@material-ui/icons';\r\nimport { createMarkup } from '../helpers';\r\n\r\nconst AnswersReview = ({ processedAnswers, classes, resetQuiz }) => {\r\n\tconst renderAnswers = answers => {\r\n\t\treturn answers.map(\r\n\t\t\t({ question, isCorrect, correctAnswer, wrongAnswer }) => (\r\n\t\t\t\t<div key={question} className={classes.paper}>\r\n\t\t\t\t\t<Typography variant='h2' className={classes.question}>\r\n\t\t\t\t\t\t<span dangerouslySetInnerHTML={createMarkup(question)} />\r\n\t\t\t\t\t</Typography>\r\n\r\n\t\t\t\t\t{isCorrect ? (\r\n\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\tvariant='h2'\r\n\t\t\t\t\t\t\tclassName={`${classes.answer} ${classes.correctAnswer}`}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Check />\r\n\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\tclassName={classes.answer}\r\n\t\t\t\t\t\t\t\tdangerouslySetInnerHTML={createMarkup(correctAnswer)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\tvariant='h3'\r\n\t\t\t\t\t\t\t\tcolor='secondary'\r\n\t\t\t\t\t\t\t\tclassName={classes.answer}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Close />\r\n\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\tclassName={classes.answer}\r\n\t\t\t\t\t\t\t\t\tdangerouslySetInnerHTML={createMarkup(wrongAnswer)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\tvariant='h3'\r\n\t\t\t\t\t\t\t\tclassName={`${classes.answer} ${classes.correctAnswer}`}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Check />\r\n\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\tclassName={classes.answer}\r\n\t\t\t\t\t\t\t\t\tdangerouslySetInnerHTML={createMarkup(correctAnswer)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Typography variant='h1' className={classes.mainTitle}>\r\n\t\t\t\tAnswers review:\r\n\t\t\t</Typography>\r\n\t\t\t{renderAnswers(processedAnswers)}\r\n\t\t\t<Button\r\n\t\t\t\tclassName={classes.submitButton}\r\n\t\t\t\tonClick={resetQuiz}\r\n\t\t\t\tvariant='contained'\r\n\t\t\t\tcolor='primary'\r\n\t\t\t>\r\n\t\t\t\tReset\r\n\t\t\t</Button>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default AnswersReview;\r\n","C:\\Users\\Default.DESKTOP-EC0DGM4\\vc\\0\\0-quiz-web\\src\\components\\CategoryOne.js",["85"],"import {\r\n\tGrid,\r\n\tPaper,\r\n\tSelect,\r\n\tButton,\r\n\tMenuItem,\r\n\tTextField,\r\n\tContainer,\r\n\tTypography,\r\n\tInputLabel,\r\n\tFormControl,\r\n} from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n\tstyles,\r\n\tdifficulties,\r\n\tcreateMarkup,\r\n\tcategoryOneSubjectList,\r\n} from '../helpers';\r\nimport QuizAnswers from './QuizAnswers';\r\nimport CE from './CE';\r\n\r\nconst useStyles = makeStyles(() => {\r\n\treturn styles;\r\n});\r\n\r\nconst QuizCategories = () => {\r\n\tconst [chapterData, setChapterData] = useState([]);\r\n\tconst [chapter, setChapter] = useState({ id: '', name: '' });\r\n\tconst [categorySubjects, setcategorySubjects] = useState('');\r\n\tconst [hasChosenSubject, setHasChosenSubject] = useState(false);\r\n\tconst [hasChosenCategory, setHasChosenCategory] = useState(true);\r\n\tconst [quizNumber, setQuizNumber] = useState(null);\r\n\tconst [difficulty, setDifficulty] = useState({\r\n\t\tid: '',\r\n\t\tname: '',\r\n\t\tnumber: '',\r\n\t});\r\n\r\n\tconst [quizData, setQuizData] = useState([]);\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\tconst classes = useStyles();\r\n\r\n\tconst [currentQuizStep, setCurrentQuizStep] = useState('start');\r\n\r\n\tconst fetchQuizData = async () => {\r\n\t\ttry {\r\n\t\t\tsetIsLoading(true);\r\n\t\t\tconst url2 = `https://entropiya-api.herokuapp.com/api/quiz/questions?amount=${quizNumber}&chapter=${chapter.id}&difficulty=${difficulty.number}`;\r\n\t\t\tconst { data } = await axios.get(url2);\r\n\t\t\tsetIsLoading(false);\r\n\r\n\t\t\tconst formattedCategory = data.map(cat => {\r\n\t\t\t\tconst incorrectAnswersIndexes = cat.incorrect_answers.length;\r\n\t\t\t\tconst randomIndex = Math.round(\r\n\t\t\t\t\tMath.random() * (incorrectAnswersIndexes - 0) + 0\r\n\t\t\t\t);\r\n\r\n\t\t\t\tcat.incorrect_answers.splice(randomIndex, 0, cat.correct_answer);\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...cat,\r\n\t\t\t\t\tanswers: cat.incorrect_answers,\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t\tsetQuizData(formattedCategory);\r\n\t\t\tconsole.log(formattedCategory);\r\n\t\t\tsetCurrentQuizStep('results');\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('Fetch quiz error =====>>>>', error);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchChapters = async () => {\r\n\t\t\tconst { data } = await axios.get(\r\n\t\t\t\t`https://entropiya-api.herokuapp.com/api/quiz/chapters?subject=${categorySubjects}`\r\n\t\t\t);\r\n\r\n\t\t\tsetChapterData(data);\r\n\t\t};\r\n\r\n\t\tfetchChapters();\r\n\r\n\t\twindow.scrollTo(0, '20px');\r\n\t}, [categorySubjects]);\r\n\r\n\tconst chooseSubjectHandler = () => {\r\n\t\tsetHasChosenSubject(true);\r\n\t};\r\n\r\n\tconst selectSubjectHandler = e => {\r\n\t\tlet chosenSubject = e.target.value;\r\n\t\tsetcategorySubjects(chosenSubject);\r\n\t};\r\n\r\n\tconst handleSubmit = e => {\r\n\t\te.preventDefault();\r\n\t\tif (!quizData.length && quizNumber && chapter.id && difficulty) {\r\n\t\t\tfetchQuizData();\r\n\t\t}\r\n\t};\r\n\r\n\tconst selectChapterHandler = e => {\r\n\t\te.preventDefault();\r\n\t\tconst selectedCategory = chapterData.find(cat => cat.id === e.target.value);\r\n\t\tsetChapter(selectedCategory);\r\n\t};\r\n\r\n\tconst handleDifficultyChange = e => {\r\n\t\te.preventDefault();\r\n\t\tconst selectedDifficulty = difficulties.find(\r\n\t\t\tdiff => diff.id === e.target.value\r\n\t\t);\r\n\t\tsetDifficulty(selectedDifficulty);\r\n\t};\r\n\r\n\tconst handleChange = e => {\r\n\t\te.preventDefault();\r\n\t\tsetQuizNumber(e.target.value);\r\n\t};\r\n\r\n\tconst resetQuiz = e => {\r\n\t\te.preventDefault();\r\n\t\tsetQuizData([]);\r\n\t\tsetChapter('');\r\n\t\tsetQuizNumber('');\r\n\t\tsetDifficulty('');\r\n\t\tsetCurrentQuizStep('start');\r\n\t\t// setHasChosenCategory(false);\r\n\t\twindow.scrollTo(0, '20px');\r\n\t\tconsole.log(hasChosenCategory);\r\n\t};\r\n\r\n\t// if (!chapterData.length) {\r\n\t// \treturn null;\r\n\t// }\r\n\r\n\tif (isLoading) {\r\n\t\treturn (\r\n\t\t\t<Container>\r\n\t\t\t\t<div className={classes.paper}>\r\n\t\t\t\t\t<Typography variant='h1' className={classes.mainTitle}>\r\n\t\t\t\t\t\tLoading questions...\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</div>\r\n\t\t\t</Container>\r\n\t\t);\r\n\t}\r\n\r\n\tif (!hasChosenSubject) {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Container>\r\n\t\t\t\t\t<div className={classes.paper}>\r\n\t\t\t\t\t\t<Typography variant='h1' className={classes.mainTitle}>\r\n\t\t\t\t\t\t\tSelect subject:\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<form onSubmit={chooseSubjectHandler}>\r\n\t\t\t\t\t\t\t<Grid container spacing={4}>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<FormControl fullWidth variant='outlined'>\r\n\t\t\t\t\t\t\t\t\t\t<InputLabel id='category-select-label'>MSTE</InputLabel>\r\n\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t\tname='category'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={categorySubjects || ''}\r\n\t\t\t\t\t\t\t\t\t\t\tid='subject-select'\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='MSTE'\r\n\t\t\t\t\t\t\t\t\t\t\tlabelId='categoery-select-label'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={selectSubjectHandler}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{categoryOneSubjectList.map(subject => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem key={subject.id} value={subject.id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdangerouslySetInnerHTML={createMarkup(subject.name)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tclassName={classes.submitButton}\r\n\t\t\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t\t\t\tvariant='contained'\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tSelect subject\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Container>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tif (!hasChosenCategory) {\r\n\t\treturn <CE />;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<div className={classes.paper}>\r\n\t\t\t\t{currentQuizStep === 'start' ? (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Typography variant='h1' className={classes.mainTitle}>\r\n\t\t\t\t\t\t\tGet Questions:\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t\t\t\t<Grid container spacing={4}>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<FormControl fullWidth variant='outlined'>\r\n\t\t\t\t\t\t\t\t\t\t<InputLabel id='category-select-label'>\r\n\t\t\t\t\t\t\t\t\t\t\tSelect topic:\r\n\t\t\t\t\t\t\t\t\t\t</InputLabel>\r\n\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t\tname='category'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={chapter.id || ''}\r\n\t\t\t\t\t\t\t\t\t\t\tid='category-select'\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='Select category'\r\n\t\t\t\t\t\t\t\t\t\t\tlabelId='category-select-label'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={selectChapterHandler}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{chapterData.map(chapter => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem key={chapter.id} value={chapter.id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdangerouslySetInnerHTML={createMarkup(chapter.name)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<FormControl fullWidth variant='outlined'>\r\n\t\t\t\t\t\t\t\t\t\t<InputLabel id='difficulty-select-label'>\r\n\t\t\t\t\t\t\t\t\t\t\tSelect Difficulty:\r\n\t\t\t\t\t\t\t\t\t\t</InputLabel>\r\n\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t\tname='difficulty'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={difficulty.id || ''}\r\n\t\t\t\t\t\t\t\t\t\t\tid='difficulty-select'\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='Select Difficulty'\r\n\t\t\t\t\t\t\t\t\t\t\tlabelId='difficulty-select-label'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleDifficultyChange}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{difficulties.map(difficulty => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem key={difficulty.id} value={difficulty.id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{difficulty.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\tinputProps={{ min: 1, max: 20 }}\r\n\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\tid='quiz-number'\r\n\t\t\t\t\t\t\t\t\t\tvariant='outlined'\r\n\t\t\t\t\t\t\t\t\t\tname='quiz-number'\r\n\t\t\t\t\t\t\t\t\t\tlabel={`Add a quiz number from 1 to 20`}\r\n\t\t\t\t\t\t\t\t\t\tvalue={quizNumber || ''}\r\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tclassName={classes.submitButton}\r\n\t\t\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t\t\t\tvariant='contained'\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tStart test\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tclassName={classes.submitButton}\r\n\t\t\t\t\t\t\t\tvariant='contained'\r\n\t\t\t\t\t\t\t\tonClick={() => setHasChosenCategory(false)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tSelect category\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<QuizAnswers\r\n\t\t\t\t\t\tclasses={classes}\r\n\t\t\t\t\t\tquizData={quizData}\r\n\t\t\t\t\t\tresetQuiz={resetQuiz}\r\n\t\t\t\t\t\tcategories={chapterData}\r\n\t\t\t\t\t\tcurrentQuizStep={currentQuizStep}\r\n\t\t\t\t\t\tsetCurrentQuizStep={setCurrentQuizStep}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default QuizCategories;\r\n","C:\\Users\\Default.DESKTOP-EC0DGM4\\vc\\0\\0-quiz-web\\src\\components\\CE.js",[],"C:\\Users\\Default.DESKTOP-EC0DGM4\\vc\\0\\0-quiz-web\\src\\components\\CategoryThree.js",["86"],"import {\r\n\tGrid,\r\n\tPaper,\r\n\tSelect,\r\n\tButton,\r\n\tMenuItem,\r\n\tTextField,\r\n\tContainer,\r\n\tTypography,\r\n\tInputLabel,\r\n\tFormControl,\r\n} from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n\tstyles,\r\n\tdifficulties,\r\n\tcreateMarkup,\r\n\tcategoryThreeSubjectList,\r\n} from '../helpers';\r\nimport QuizAnswers from './QuizAnswers';\r\nimport CE from './CE';\r\n\r\n//Note. Need baguhin para sa ibang category like CategoryOne, CategoryThree ay categoryOneSubjectList, MSTE to SEC\r\n\r\nconst useStyles = makeStyles(() => {\r\n\treturn styles;\r\n});\r\n\r\nconst QuizCategories = () => {\r\n\tconst [chapterData, setChapterData] = useState([]);\r\n\tconst [chapter, setChapter] = useState({ id: '', name: '' });\r\n\tconst [categorySubjects, setcategorySubjects] = useState('');\r\n\tconst [hasChosenSubject, setHasChosenSubject] = useState(false);\r\n\tconst [hasChosenCategory, setHasChosenCategory] = useState(true);\r\n\tconst [quizNumber, setQuizNumber] = useState(null);\r\n\tconst [difficulty, setDifficulty] = useState({\r\n\t\tid: '',\r\n\t\tname: '',\r\n\t\tnumber: '',\r\n\t});\r\n\r\n\tconst [quizData, setQuizData] = useState([]);\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\tconst classes = useStyles();\r\n\r\n\tconst [currentQuizStep, setCurrentQuizStep] = useState('start');\r\n\r\n\tconst fetchQuizData = async () => {\r\n\t\ttry {\r\n\t\t\tsetIsLoading(true);\r\n\t\t\tconst url2 = `https://entropiya-api.herokuapp.com/api/quiz/questions?amount=${quizNumber}&chapter=${chapter.id}&difficulty=${difficulty.number}`;\r\n\t\t\tconst { data } = await axios.get(url2);\r\n\t\t\tsetIsLoading(false);\r\n\r\n\t\t\tconst formattedCategory = data.map(cat => {\r\n\t\t\t\tconst incorrectAnswersIndexes = cat.incorrect_answers.length;\r\n\t\t\t\tconst randomIndex = Math.round(\r\n\t\t\t\t\tMath.random() * (incorrectAnswersIndexes - 0) + 0\r\n\t\t\t\t);\r\n\r\n\t\t\t\tcat.incorrect_answers.splice(randomIndex, 0, cat.correct_answer);\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...cat,\r\n\t\t\t\t\tanswers: cat.incorrect_answers,\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t\tsetQuizData(formattedCategory);\r\n\t\t\tconsole.log(formattedCategory);\r\n\t\t\tsetCurrentQuizStep('results');\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('Fetch quiz error =====>>>>', error);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchChapters = async () => {\r\n\t\t\tconst { data } = await axios.get(\r\n\t\t\t\t`https://entropiya-api.herokuapp.com/api/quiz/chapters?subject=${categorySubjects}`\r\n\t\t\t);\r\n\r\n\t\t\tsetChapterData(data);\r\n\t\t};\r\n\r\n\t\tfetchChapters();\r\n\r\n\t\twindow.scrollTo(0, '20px');\r\n\t}, [categorySubjects]);\r\n\r\n\tconst chooseSubjectHandler = () => {\r\n\t\tsetHasChosenSubject(true);\r\n\t};\r\n\r\n\tconst selectSubjectHandler = e => {\r\n\t\tlet chosenSubject = e.target.value;\r\n\t\tsetcategorySubjects(chosenSubject);\r\n\t};\r\n\r\n\tconst handleSubmit = e => {\r\n\t\te.preventDefault();\r\n\t\tif (!quizData.length && quizNumber && chapter.id && difficulty) {\r\n\t\t\tfetchQuizData();\r\n\t\t}\r\n\t};\r\n\r\n\tconst selectChapterHandler = e => {\r\n\t\te.preventDefault();\r\n\t\tconst selectedCategory = chapterData.find(cat => cat.id === e.target.value);\r\n\t\tsetChapter(selectedCategory);\r\n\t};\r\n\r\n\tconst handleDifficultyChange = e => {\r\n\t\te.preventDefault();\r\n\t\tconst selectedDifficulty = difficulties.find(\r\n\t\t\tdiff => diff.id === e.target.value\r\n\t\t);\r\n\t\tsetDifficulty(selectedDifficulty);\r\n\t};\r\n\r\n\tconst handleChange = e => {\r\n\t\te.preventDefault();\r\n\t\tsetQuizNumber(e.target.value);\r\n\t};\r\n\r\n\tconst resetQuiz = e => {\r\n\t\te.preventDefault();\r\n\t\tsetQuizData([]);\r\n\t\tsetChapter('');\r\n\t\tsetQuizNumber('');\r\n\t\tsetDifficulty('');\r\n\t\tsetCurrentQuizStep('start');\r\n\t\t// setHasChosenCategory(false);\r\n\t\twindow.scrollTo(0, '20px');\r\n\t\tconsole.log(hasChosenCategory);\r\n\t};\r\n\r\n\t// if (!chapterData.length) {\r\n\t// \treturn null;\r\n\t// }\r\n\r\n\tif (isLoading) {\r\n\t\treturn (\r\n\t\t\t<Container>\r\n\t\t\t\t<div className={classes.paper}>\r\n\t\t\t\t\t<Typography variant='h1' className={classes.mainTitle}>\r\n\t\t\t\t\t\tLoading questions...\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</div>\r\n\t\t\t</Container>\r\n\t\t);\r\n\t}\r\n\r\n\tif (!hasChosenSubject) {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Container>\r\n\t\t\t\t\t<div className={classes.paper}>\r\n\t\t\t\t\t\t<Typography variant='h1' className={classes.mainTitle}>\r\n\t\t\t\t\t\t\tSelect subject:\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<form onSubmit={chooseSubjectHandler}>\r\n\t\t\t\t\t\t\t<Grid container spacing={4}>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<FormControl fullWidth variant='outlined'>\r\n\t\t\t\t\t\t\t\t\t\t<InputLabel id='category-select-label'>SEC</InputLabel>\r\n\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t\tname='category'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={categorySubjects || ''}\r\n\t\t\t\t\t\t\t\t\t\t\tid='subject-select'\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='SEC'\r\n\t\t\t\t\t\t\t\t\t\t\tlabelId='categoery-select-label'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={selectSubjectHandler}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{categoryThreeSubjectList.map(subject => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem key={subject.id} value={subject.id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdangerouslySetInnerHTML={createMarkup(subject.name)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tclassName={classes.submitButton}\r\n\t\t\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t\t\t\tvariant='contained'\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tSelect subject\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Container>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tif (!hasChosenCategory) {\r\n\t\treturn <CE />;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<div className={classes.paper}>\r\n\t\t\t\t{currentQuizStep === 'start' ? (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Typography variant='h1' className={classes.mainTitle}>\r\n\t\t\t\t\t\t\tGet Questions:\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t\t\t\t<Grid container spacing={4}>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<FormControl fullWidth variant='outlined'>\r\n\t\t\t\t\t\t\t\t\t\t<InputLabel id='category-select-label'>\r\n\t\t\t\t\t\t\t\t\t\t\tSelect topic:\r\n\t\t\t\t\t\t\t\t\t\t</InputLabel>\r\n\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t\tname='category'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={chapter.id || ''}\r\n\t\t\t\t\t\t\t\t\t\t\tid='category-select'\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='Select category'\r\n\t\t\t\t\t\t\t\t\t\t\tlabelId='category-select-label'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={selectChapterHandler}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{chapterData.map(chapter => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem key={chapter.id} value={chapter.id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdangerouslySetInnerHTML={createMarkup(chapter.name)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<FormControl fullWidth variant='outlined'>\r\n\t\t\t\t\t\t\t\t\t\t<InputLabel id='difficulty-select-label'>\r\n\t\t\t\t\t\t\t\t\t\t\tSelect Difficulty:\r\n\t\t\t\t\t\t\t\t\t\t</InputLabel>\r\n\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t\tname='difficulty'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={difficulty.id || ''}\r\n\t\t\t\t\t\t\t\t\t\t\tid='difficulty-select'\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='Select Difficulty'\r\n\t\t\t\t\t\t\t\t\t\t\tlabelId='difficulty-select-label'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleDifficultyChange}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{difficulties.map(difficulty => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem key={difficulty.id} value={difficulty.id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{difficulty.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\tinputProps={{ min: 1, max: 20 }}\r\n\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\tid='quiz-number'\r\n\t\t\t\t\t\t\t\t\t\tvariant='outlined'\r\n\t\t\t\t\t\t\t\t\t\tname='quiz-number'\r\n\t\t\t\t\t\t\t\t\t\tlabel={`Add a quiz number from 1 to 20`}\r\n\t\t\t\t\t\t\t\t\t\tvalue={quizNumber || ''}\r\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tclassName={classes.submitButton}\r\n\t\t\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t\t\t\tvariant='contained'\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tStart test\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tclassName={classes.submitButton}\r\n\t\t\t\t\t\t\t\tvariant='contained'\r\n\t\t\t\t\t\t\t\tonClick={() => setHasChosenCategory(false)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tSelect category\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<QuizAnswers\r\n\t\t\t\t\t\tclasses={classes}\r\n\t\t\t\t\t\tquizData={quizData}\r\n\t\t\t\t\t\tresetQuiz={resetQuiz}\r\n\t\t\t\t\t\tcategories={chapterData}\r\n\t\t\t\t\t\tcurrentQuizStep={currentQuizStep}\r\n\t\t\t\t\t\tsetCurrentQuizStep={setCurrentQuizStep}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default QuizCategories;\r\n","C:\\Users\\Default.DESKTOP-EC0DGM4\\vc\\0\\0-quiz-web\\src\\components\\CategoryTwo.js",["87"],"import {\r\n\tGrid,\r\n\tPaper,\r\n\tSelect,\r\n\tButton,\r\n\tMenuItem,\r\n\tTextField,\r\n\tContainer,\r\n\tTypography,\r\n\tInputLabel,\r\n\tFormControl,\r\n} from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n\tstyles,\r\n\tdifficulties,\r\n\tcreateMarkup,\r\n\tcategoryTwoSubjectList,\r\n} from '../helpers';\r\nimport QuizAnswers from './QuizAnswers';\r\nimport CE from './CE';\r\n\r\n//Note. Need baguhin para sa ibang category like CategoryOne, CategoryThree ay categoryOneSubjectList, MSTE to HGE\r\n\r\nconst useStyles = makeStyles(() => {\r\n\treturn styles;\r\n});\r\n\r\nconst QuizCategories = () => {\r\n\tconst [chapterData, setChapterData] = useState([]);\r\n\tconst [chapter, setChapter] = useState({ id: '', name: '' });\r\n\tconst [categorySubjects, setcategorySubjects] = useState('');\r\n\tconst [hasChosenSubject, setHasChosenSubject] = useState(false);\r\n\tconst [hasChosenCategory, setHasChosenCategory] = useState(true);\r\n\tconst [quizNumber, setQuizNumber] = useState(null);\r\n\tconst [difficulty, setDifficulty] = useState({\r\n\t\tid: '',\r\n\t\tname: '',\r\n\t\tnumber: '',\r\n\t});\r\n\r\n\tconst [quizData, setQuizData] = useState([]);\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\tconst classes = useStyles();\r\n\r\n\tconst [currentQuizStep, setCurrentQuizStep] = useState('start');\r\n\r\n\tconst fetchQuizData = async () => {\r\n\t\ttry {\r\n\t\t\tsetIsLoading(true);\r\n\t\t\tconst url2 = `https://entropiya-api.herokuapp.com/api/quiz/questions?amount=${quizNumber}&chapter=${chapter.id}&difficulty=${difficulty.number}`;\r\n\t\t\tconst { data } = await axios.get(url2);\r\n\t\t\tsetIsLoading(false);\r\n\r\n\t\t\tconst formattedCategory = data.map(cat => {\r\n\t\t\t\tconst incorrectAnswersIndexes = cat.incorrect_answers.length;\r\n\t\t\t\tconst randomIndex = Math.round(\r\n\t\t\t\t\tMath.random() * (incorrectAnswersIndexes - 0) + 0\r\n\t\t\t\t);\r\n\r\n\t\t\t\tcat.incorrect_answers.splice(randomIndex, 0, cat.correct_answer);\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...cat,\r\n\t\t\t\t\tanswers: cat.incorrect_answers,\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t\tsetQuizData(formattedCategory);\r\n\t\t\tconsole.log(formattedCategory);\r\n\t\t\tsetCurrentQuizStep('results');\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('Fetch quiz error =====>>>>', error);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchChapters = async () => {\r\n\t\t\tconst { data } = await axios.get(\r\n\t\t\t\t`https://entropiya-api.herokuapp.com/api/quiz/chapters?subject=${categorySubjects}`\r\n\t\t\t);\r\n\r\n\t\t\tsetChapterData(data);\r\n\t\t};\r\n\r\n\t\tfetchChapters();\r\n\r\n\t\twindow.scrollTo(0, '20px');\r\n\t}, [categorySubjects]);\r\n\r\n\tconst chooseSubjectHandler = () => {\r\n\t\tsetHasChosenSubject(true);\r\n\t};\r\n\r\n\tconst selectSubjectHandler = e => {\r\n\t\tlet chosenSubject = e.target.value;\r\n\t\tsetcategorySubjects(chosenSubject);\r\n\t};\r\n\r\n\tconst handleSubmit = e => {\r\n\t\te.preventDefault();\r\n\t\tif (!quizData.length && quizNumber && chapter.id && difficulty) {\r\n\t\t\tfetchQuizData();\r\n\t\t}\r\n\t};\r\n\r\n\tconst selectChapterHandler = e => {\r\n\t\te.preventDefault();\r\n\t\tconst selectedCategory = chapterData.find(cat => cat.id === e.target.value);\r\n\t\tsetChapter(selectedCategory);\r\n\t};\r\n\r\n\tconst handleDifficultyChange = e => {\r\n\t\te.preventDefault();\r\n\t\tconst selectedDifficulty = difficulties.find(\r\n\t\t\tdiff => diff.id === e.target.value\r\n\t\t);\r\n\t\tsetDifficulty(selectedDifficulty);\r\n\t};\r\n\r\n\tconst handleChange = e => {\r\n\t\te.preventDefault();\r\n\t\tsetQuizNumber(e.target.value);\r\n\t};\r\n\r\n\tconst resetQuiz = e => {\r\n\t\te.preventDefault();\r\n\t\tsetQuizData([]);\r\n\t\tsetChapter('');\r\n\t\tsetQuizNumber('');\r\n\t\tsetDifficulty('');\r\n\t\tsetCurrentQuizStep('start');\r\n\t\t// setHasChosenCategory(false);\r\n\t\twindow.scrollTo(0, '20px');\r\n\t\tconsole.log(hasChosenCategory);\r\n\t};\r\n\r\n\t// if (!chapterData.length) {\r\n\t// \treturn null;\r\n\t// }\r\n\r\n\tif (isLoading) {\r\n\t\treturn (\r\n\t\t\t<Container>\r\n\t\t\t\t<div className={classes.paper}>\r\n\t\t\t\t\t<Typography variant='h1' className={classes.mainTitle}>\r\n\t\t\t\t\t\tLoading questions...\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</div>\r\n\t\t\t</Container>\r\n\t\t);\r\n\t}\r\n\r\n\tif (!hasChosenSubject) {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Container>\r\n\t\t\t\t\t<div className={classes.paper}>\r\n\t\t\t\t\t\t<Typography variant='h1' className={classes.mainTitle}>\r\n\t\t\t\t\t\t\tSelect subject:\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<form onSubmit={chooseSubjectHandler}>\r\n\t\t\t\t\t\t\t<Grid container spacing={4}>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<FormControl fullWidth variant='outlined'>\r\n\t\t\t\t\t\t\t\t\t\t<InputLabel id='category-select-label'>HGE</InputLabel>\r\n\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t\tname='category'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={categorySubjects || ''}\r\n\t\t\t\t\t\t\t\t\t\t\tid='subject-select'\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='HGE'\r\n\t\t\t\t\t\t\t\t\t\t\tlabelId='categoery-select-label'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={selectSubjectHandler}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{categoryTwoSubjectList.map(subject => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem key={subject.id} value={subject.id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdangerouslySetInnerHTML={createMarkup(subject.name)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tclassName={classes.submitButton}\r\n\t\t\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t\t\t\tvariant='contained'\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tSelect subject\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Container>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tif (!hasChosenCategory) {\r\n\t\treturn <CE />;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<div className={classes.paper}>\r\n\t\t\t\t{currentQuizStep === 'start' ? (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Typography variant='h1' className={classes.mainTitle}>\r\n\t\t\t\t\t\t\tGet Questions:\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t\t\t\t<Grid container spacing={4}>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<FormControl fullWidth variant='outlined'>\r\n\t\t\t\t\t\t\t\t\t\t<InputLabel id='category-select-label'>\r\n\t\t\t\t\t\t\t\t\t\t\tSelect topic:\r\n\t\t\t\t\t\t\t\t\t\t</InputLabel>\r\n\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t\tname='category'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={chapter.id || ''}\r\n\t\t\t\t\t\t\t\t\t\t\tid='category-select'\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='Select category'\r\n\t\t\t\t\t\t\t\t\t\t\tlabelId='category-select-label'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={selectChapterHandler}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{chapterData.map(chapter => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem key={chapter.id} value={chapter.id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdangerouslySetInnerHTML={createMarkup(chapter.name)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<FormControl fullWidth variant='outlined'>\r\n\t\t\t\t\t\t\t\t\t\t<InputLabel id='difficulty-select-label'>\r\n\t\t\t\t\t\t\t\t\t\t\tSelect Difficulty:\r\n\t\t\t\t\t\t\t\t\t\t</InputLabel>\r\n\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t\tname='difficulty'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={difficulty.id || ''}\r\n\t\t\t\t\t\t\t\t\t\t\tid='difficulty-select'\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='Select Difficulty'\r\n\t\t\t\t\t\t\t\t\t\t\tlabelId='difficulty-select-label'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleDifficultyChange}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{difficulties.map(difficulty => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem key={difficulty.id} value={difficulty.id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{difficulty.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\tinputProps={{ min: 1, max: 20 }}\r\n\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\tid='quiz-number'\r\n\t\t\t\t\t\t\t\t\t\tvariant='outlined'\r\n\t\t\t\t\t\t\t\t\t\tname='quiz-number'\r\n\t\t\t\t\t\t\t\t\t\tlabel={`Add a quiz number from 1 to 20`}\r\n\t\t\t\t\t\t\t\t\t\tvalue={quizNumber || ''}\r\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tclassName={classes.submitButton}\r\n\t\t\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t\t\t\tvariant='contained'\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tStart test\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tclassName={classes.submitButton}\r\n\t\t\t\t\t\t\t\tvariant='contained'\r\n\t\t\t\t\t\t\t\tonClick={() => setHasChosenCategory(false)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tSelect category\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<QuizAnswers\r\n\t\t\t\t\t\tclasses={classes}\r\n\t\t\t\t\t\tquizData={quizData}\r\n\t\t\t\t\t\tresetQuiz={resetQuiz}\r\n\t\t\t\t\t\tcategories={chapterData}\r\n\t\t\t\t\t\tcurrentQuizStep={currentQuizStep}\r\n\t\t\t\t\t\tsetCurrentQuizStep={setCurrentQuizStep}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default QuizCategories;\r\n",{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":3,"column":2,"nodeType":"94","messageId":"95","endLine":3,"endColumn":7},{"ruleId":"92","severity":1,"message":"93","line":1,"column":10,"nodeType":"94","messageId":"95","endLine":1,"endColumn":15},{"ruleId":"92","severity":1,"message":"93","line":3,"column":2,"nodeType":"94","messageId":"95","endLine":3,"endColumn":7},{"ruleId":"92","severity":1,"message":"93","line":3,"column":2,"nodeType":"94","messageId":"95","endLine":3,"endColumn":7},{"ruleId":"92","severity":1,"message":"93","line":3,"column":2,"nodeType":"94","messageId":"95","endLine":3,"endColumn":7},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-unused-vars","'Paper' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]